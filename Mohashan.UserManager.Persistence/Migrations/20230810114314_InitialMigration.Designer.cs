// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Mohashan.UserManager.Persistence;

#nullable disable

namespace Mohashan.UserManager.Persistence.Migrations
{
    [DbContext(typeof(UserManagerDbContext))]
    [Migration("20230810114314_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Mohashan.UserManager.Domain.Entities.Feature", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DataType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Features");

                    b.HasData(
                        new
                        {
                            Id = new Guid("392b2705-8e02-49c2-b157-27c332640f38"),
                            CreatedBy = "Seeder",
                            CreatedDateTime = new DateTime(2023, 8, 10, 15, 13, 14, 742, DateTimeKind.Local).AddTicks(5841),
                            DataType = "String",
                            IsDeleted = false,
                            Name = "MobileNumber"
                        },
                        new
                        {
                            Id = new Guid("cdcf60cd-fe72-4ce9-84f9-c594a453ba72"),
                            CreatedBy = "Seeder",
                            CreatedDateTime = new DateTime(2023, 8, 10, 15, 13, 14, 742, DateTimeKind.Local).AddTicks(5868),
                            DataType = "String",
                            IsDeleted = false,
                            Name = "Email"
                        });
                });

            modelBuilder.Entity("Mohashan.UserManager.Domain.Entities.Group", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Groups");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b71e10cf-4d7e-4347-88ca-ffbb851eb2b5"),
                            CreatedBy = "Seeder",
                            CreatedDateTime = new DateTime(2023, 8, 10, 15, 13, 14, 742, DateTimeKind.Local).AddTicks(5947),
                            IsDeleted = false,
                            Name = "AdminGroup"
                        },
                        new
                        {
                            Id = new Guid("f864de16-dd49-4e19-b710-d568c865d747"),
                            CreatedBy = "Seeder",
                            CreatedDateTime = new DateTime(2023, 8, 10, 15, 13, 14, 742, DateTimeKind.Local).AddTicks(5955),
                            IsDeleted = false,
                            Name = "ReportGroup"
                        });
                });

            modelBuilder.Entity("Mohashan.UserManager.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("UserTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserTypeId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7f4b464d-cf9b-4174-b1c1-5305ae88785a"),
                            CreatedBy = "Seeder",
                            CreatedDateTime = new DateTime(2023, 8, 10, 15, 13, 14, 742, DateTimeKind.Local).AddTicks(5936),
                            IsDeleted = false,
                            Name = "Admin",
                            UserTypeId = new Guid("6ef3262e-8d52-4a76-bada-27f84f227a7e")
                        });
                });

            modelBuilder.Entity("Mohashan.UserManager.Domain.Entities.UserFeature", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("FeatureId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("FeatureId");

                    b.HasIndex("UserId");

                    b.ToTable("userFeatures");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f6318606-bf39-4a75-8559-d668928ba211"),
                            CreatedBy = "Seeder",
                            CreatedDateTime = new DateTime(2023, 8, 10, 15, 13, 14, 742, DateTimeKind.Local).AddTicks(5980),
                            FeatureId = new Guid("392b2705-8e02-49c2-b157-27c332640f38"),
                            IsDeleted = false,
                            UserId = new Guid("7f4b464d-cf9b-4174-b1c1-5305ae88785a"),
                            Value = "09011500119"
                        },
                        new
                        {
                            Id = new Guid("63d9efad-9713-4690-8bbc-eb54e3821b0e"),
                            CreatedBy = "Seeder",
                            CreatedDateTime = new DateTime(2023, 8, 10, 15, 13, 14, 742, DateTimeKind.Local).AddTicks(5987),
                            FeatureId = new Guid("cdcf60cd-fe72-4ce9-84f9-c594a453ba72"),
                            IsDeleted = false,
                            UserId = new Guid("7f4b464d-cf9b-4174-b1c1-5305ae88785a"),
                            Value = "msh200x@gmail.com"
                        });
                });

            modelBuilder.Entity("Mohashan.UserManager.Domain.Entities.UserGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("UserId");

                    b.ToTable("userGroups");

                    b.HasData(
                        new
                        {
                            Id = new Guid("91442ebf-36a4-451e-81f3-003cc7c673ed"),
                            CreatedBy = "Seeder",
                            CreatedDateTime = new DateTime(2023, 8, 10, 15, 13, 14, 742, DateTimeKind.Local).AddTicks(5963),
                            GroupId = new Guid("b71e10cf-4d7e-4347-88ca-ffbb851eb2b5"),
                            IsDeleted = false,
                            UserId = new Guid("7f4b464d-cf9b-4174-b1c1-5305ae88785a")
                        },
                        new
                        {
                            Id = new Guid("354960c6-c1ba-4aa9-a1d9-1fe3a193f69a"),
                            CreatedBy = "Seeder",
                            CreatedDateTime = new DateTime(2023, 8, 10, 15, 13, 14, 742, DateTimeKind.Local).AddTicks(5972),
                            GroupId = new Guid("f864de16-dd49-4e19-b710-d568c865d747"),
                            IsDeleted = false,
                            UserId = new Guid("7f4b464d-cf9b-4174-b1c1-5305ae88785a")
                        });
                });

            modelBuilder.Entity("Mohashan.UserManager.Domain.Entities.UserType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("UserTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6ef3262e-8d52-4a76-bada-27f84f227a7e"),
                            CreatedBy = "Seeder",
                            CreatedDateTime = new DateTime(2023, 8, 10, 15, 13, 14, 742, DateTimeKind.Local).AddTicks(5877),
                            IsDeleted = false,
                            Name = "Human"
                        },
                        new
                        {
                            Id = new Guid("d7e652db-56cd-40fe-b370-757a74ca77b5"),
                            CreatedBy = "Seeder",
                            CreatedDateTime = new DateTime(2023, 8, 10, 15, 13, 14, 742, DateTimeKind.Local).AddTicks(5925),
                            IsDeleted = false,
                            Name = "System"
                        });
                });

            modelBuilder.Entity("Mohashan.UserManager.Domain.Entities.User", b =>
                {
                    b.HasOne("Mohashan.UserManager.Domain.Entities.UserType", "UserType")
                        .WithMany()
                        .HasForeignKey("UserTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserType");
                });

            modelBuilder.Entity("Mohashan.UserManager.Domain.Entities.UserFeature", b =>
                {
                    b.HasOne("Mohashan.UserManager.Domain.Entities.Feature", "Feature")
                        .WithMany("UserFeatures")
                        .HasForeignKey("FeatureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mohashan.UserManager.Domain.Entities.User", "User")
                        .WithMany("UserFeatures")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Feature");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Mohashan.UserManager.Domain.Entities.UserGroup", b =>
                {
                    b.HasOne("Mohashan.UserManager.Domain.Entities.Group", "Group")
                        .WithMany("UserGroups")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mohashan.UserManager.Domain.Entities.User", "User")
                        .WithMany("UserGroup")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Mohashan.UserManager.Domain.Entities.Feature", b =>
                {
                    b.Navigation("UserFeatures");
                });

            modelBuilder.Entity("Mohashan.UserManager.Domain.Entities.Group", b =>
                {
                    b.Navigation("UserGroups");
                });

            modelBuilder.Entity("Mohashan.UserManager.Domain.Entities.User", b =>
                {
                    b.Navigation("UserFeatures");

                    b.Navigation("UserGroup");
                });
#pragma warning restore 612, 618
        }
    }
}
